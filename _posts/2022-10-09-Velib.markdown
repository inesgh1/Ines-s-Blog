---
layout: post
title: Analyse des donn√©es Velib "Etude de cas"
date: 2022-10-09
description: C'est un projet qui etait propos√© comme etant un test technique pour le poste stagiaire data scientist
img: velib.png # Add image post (optional)
tags: [Programming,K-means,machine learning,interview,data science] # add tag
---
Ce projet est a la base un test technique pour le poste stagiare data scientist.
la 1 ere etape c'est de comprendre le jeu de donn√©e velib qui est du [opendata-paris](https://opendata.paris.fr/explore/dataset/velib-disponibilite-en-temps-reel/information/?disjunctive.name&disjunctive.is_installed&disjunctive.is_renting&disjunctive.is_returning&disjunctive.nom_arrondissement_communes)
apres on a...

## Plan
1. Acquisition des donn√©es V√©lib avec Python et Pandas
2. Stockage des donn√©es
3. Acquisition des donn√©es
4. Comprendre notre jeu de donn√©e
5. Classification automatique non supervis√©e
6. Data visualization

# 1.Acquisition des donn√©es V√©lib avec Python et Pandas

Plus concr√®tement, regardons en d√©tail ce que contiennent ces donn√©es avec Python. Pour ce faire, nous allons utiliser le module requests pour lancer une requ√™te sur l'API de V√©lib. Notre premi√®re requ√™te porte sur les caract√©ristiques des stations V√©libs
```
import requests

answer = requests.get("https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_information.json").json()
print(answer.keys())
```
On obtient en retour un fichier JSON, que l'on peut manipuler comme un dictionnaire Python, avec 3 clefs : lastUpdatedOther l'indication de la date de derni√®re mise √† jour des donn√©es, ttl la dur√©e de vie des donn√©es avant de devenir obsol√®te et enfin data les donn√©es proprement d√Ætes.

Pour manipuler ces donn√©es, nous allons utiliser le module Pandas. C'est un outil puissant d'analyse de donn√©es dont la base est l'objet DataFrame

```
import pandas as pd

df_1 = pd.DataFrame(answer["data"]["stations"])
df_1.head()
```
On voit que pour chaque station, nous disposons de son nom, de son identifiant unique station_id et de sa position en latitude lat et longitude lon. Ce sont des donn√©es √† dur√©e de vie longue que nous allons garder sous le bras. On ne s'attend pas √† ce que des stations se d√©placent ou bien changent de nom toutes les 5 minutes.

Une requ√™te que nous allons effectuer tr√®s r√©guli√®rement concerne l'occupation des stations :
```
answer = requests.get("https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_status.json").json()
df_2 = pd.DataFrame(answer["data"]["stations"])
df_2.head()
```
Pour chaque station, nous obtenons en temps r√©el (les donn√©es sont mises √† jour toutes les minutes) le nombre de v√©libs mis √† disposition, le nombre de places disponibles et m√™me la d√©composition entre le nombre de v√©los m√©caniques et √©lectriques.
  Congrats üéâ:Mission accomplie nous avons recuperer les donn√©e en utilisant API et python.
  
  # 2.Stockage des donn√©es





